data_irr %>% ggplot(aes(x = cond_c, y = exp, fill = cond_c)) +
geom_point() + theme_minimal() + labs(title = "Scatterplot for irrelevant question") + xlab("Number of context sentences") + ylab("Expectedness")  + guides(fill = guide_legend(title = "Context")) +
scale_fill_brewer(palette = 'PuOr')
##### Plots for then-question ##########
data_then <- subset(data, cond_q=="then")
data_then %>% ggplot(aes(x = cond_c, y = exp, fill = cond_c)) +
geom_point() + theme_minimal() + labs(title = "Scatterplot for then-question") + xlab("Number of context sentences") + ylab("Expectedness")  + guides(fill = guide_legend(title = "Context")) +
scale_fill_brewer(palette = 'PuOr')
data_then <- subset(data, cond_q=="then")
data_then %>% ggplot(aes(x = cond_c, y = exp, fill = cond_c)) +
geom_boxplot() + theme_minimal() + labs(title = "Boxplot for then-question") + xlab("Number of context sentences") + ylab("Expectedness")  + guides(fill = guide_legend(title = "Context")) +
scale_fill_brewer(palette = 'PuOr')
data_then %>% group_by(cond_c) %>%
summarize(M = mean(exp), SD = sd(exp))
##### Take out all questions except pq1 ##########
data_pq1 <- subset(data, cond_q=="pq1")
str(data_pq1)
##### show the mean and standard deviation for the two conditions ##########
data_pq1 %>% group_by(cond_c) %>%
summarize(M = mean(exp), SD = sd(exp))
##### plot means and sd ############
data_pq1 %>% ggplot(aes(x = cond_c, y = exp, fill = cond_c)) +
geom_boxplot() + theme_minimal() + labs(title = "Boxplot") + xlab("Number of context sentences") + ylab("Expectedness")  + guides(fill = guide_legend(title = "Context")) +
scale_fill_brewer(palette = 'PuOr')
data_pq1 %>% ggplot(aes(x = cond_c, y = exp, fill = cond_c)) +
geom_point() + theme_minimal() + labs(title = "Scatterplot") + xlab("Number of context sentences") + ylab("Expectedness")  + guides(fill = guide_legend(title = "Context")) +
scale_fill_brewer(palette = 'PuOr')
#####Dummy variables because my variable is categorical
# The code below is unnecessary because R does this automatically
#dummy(data_pq1$cond_c, "c3")
#### model 1 -- Without random effects
model1 <- lm(exp ~ cond_c, data = data_pq1)
summary(model1)
#### model 2 -- With varying intercepts and slopes
model2 <- lmer(exp ~ cond_c + (1 + cond_c|id) + (1 + cond_c|target_no), data = data_pq1)
summary(model2)
#### model 3 without the (only) predictor context
model3 <- lmer(exp ~ 1 + (1 + cond_c|id) + (1 + cond_c|target_no), data = data_pq1)
summary(model3)
##### compare the two models with and without predictor######
anova(model2, model3)
#### model 4 -- With varying intercepts
model4 <- lmer(exp ~ cond_c + (1|id) + (1|target_no), data = data_pq1)
summary(model4)
##### compare the two models with and without predictor######
anova(model2, model4)
#Normalisieren!!! Hier weiter!!!
source("C:/Arbeit/R statistics/regression-utils.r")
source("C:/Arbeit/R statistics/mer-utils.r")
source("C:/Arbeit/R statistics/regression-utils.r")
source("C:/Arbeit/R statistics/mer-utils.r")
data <- read.csv("C:/Arbeit/Expectedness/experiments/pretest/pilot2/results/preprocessed_data/data.csv", sep = ";")
#### Why this? - To make sure the entries are interpreted as numbers? #####
data$exp<-as.numeric(data$exp)
data$cond_c<-as.factor(data$cond_c)
str(data)
##### Plots for irrelevant control #############
data_irr <- subset(data, cond_q=="irr")
data_irr %>% ggplot(aes(x = cond_c, y = exp, fill = cond_c)) +
geom_point() + theme_minimal() + labs(title = "Scatterplot for irrelevant question") + xlab("Number of context sentences") + ylab("Expectedness")  + guides(fill = guide_legend(title = "Context")) +
scale_fill_brewer(palette = 'PuOr')
##### Plots for then-question ##########
data_then <- subset(data, cond_q=="then")
data_then %>% ggplot(aes(x = cond_c, y = exp, fill = cond_c)) +
geom_point() + theme_minimal() + labs(title = "Scatterplot for then-question") + xlab("Number of context sentences") + ylab("Expectedness")  + guides(fill = guide_legend(title = "Context")) +
scale_fill_brewer(palette = 'PuOr')
data_then <- subset(data, cond_q=="then")
data_then %>% ggplot(aes(x = cond_c, y = exp, fill = cond_c)) +
geom_boxplot() + theme_minimal() + labs(title = "Boxplot for then-question") + xlab("Number of context sentences") + ylab("Expectedness")  + guides(fill = guide_legend(title = "Context")) +
scale_fill_brewer(palette = 'PuOr')
data_then %>% group_by(cond_c) %>%
summarize(M = mean(exp), SD = sd(exp))
##### Take out all questions except pq1 ##########
data_pq1 <- subset(data, cond_q=="pq1")
str(data_pq1)
model1 <- lm(exp ~ cond_c, data = data_pq1)
summary(model1)
get_pvalues(model1)
get_pvalues(model2)
model2 <- lmer(exp ~ cond_c + (1 + cond_c|id) + (1 + cond_c|target_no), data = data_pq1)
summary(model2)
#### model 2 -- With varying intercepts and slopes
model2 <- lmer(exp ~ cond_c + (1 + cond_c|id) + (1 + cond_c|target_no), data = data_pq1)
library(readxl)
library(readr)
library(ggplot2)
library(ggpubr)
library(plyr)
library(dplyr)
library(ez)
library(lme4)
library(languageR)
library(car)
library(MASS)
library(fitdistrplus)
library(ordinal)
library(nlme)
library(logspline)
library(gplots)
library(stringr)
library(tidyr)
library(tidyverse)
library(tidyselect)
library(broom)
model2 <- lmer(exp ~ cond_c + (1 + cond_c|id) + (1 + cond_c|target_no), data = data_pq1)
summary(model2)
get_pvalues(model2)
#### get the p-values for model1 ######
get_pvalues(model1)
View(personendaten)
model2 <- lmer(exp ~ cond_c + (1 + cond_c|id) + (1 + cond_c|target_no), data = data_pq1)
kappa.mer(model2)
max(vif.mer(model2))
overdisp.test(model2)
source("C:/Arbeit/R statistics/boot_glmm.r")
overdisp.test(model2)
#overdisp.test(model2) ## function not found
diagnostics.plot(model2)
#violin plot preference per item ((5b) swapped)
ggplot() +
geom_violin(data = data, aes(x = item, y = pref_swapped), alpha = .5)+
geom_point(data = means.item2, aes(x = item, y = Mean.pref2, color = item, shape = item, legend = NULL), size=3, alpha=1) +
guides(color = "none") +
guides(shape = "none") +
scale_color_manual(values = c("(5a)" = "blue", "(5b)" = "orange"))+
geom_dotplot(data = data, aes(x = item, y = pref_swapped), binaxis = "y", binwidth=0.2,
stackdir = "center", dotsize = 0.2, fill="gray40", alpha=.6, color="gray20") +
geom_errorbar(data = means.item2, aes(x = item, ymin=YMin,ymax=YMax),width=.05,color="black") +
xlab("Context") +
ylab("Preference rating") +
scale_y_continuous(breaks=c(-1,0,1),labels=c("A much better","equally good","B much better"),
limits = c(-1,1))
# set working directory to directory of script
this.dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(this.dir)
library(readr)
library(lme4)
library(tidyverse)
library(ggrepel)
library(lsmeans)
library(lmerTest)
theme_set(theme_bw())
########################################################
source("C:/Arbeit/R statistics/helpers.r")
#### load data ###########
data <- read.csv("../data/preprocessed_data/data.csv", sep = ";")
nrow(data) #20
summary(data)
table(data$list)
# 10 per list
#### Interpret exp (expectedness rating) and pref (preference rating) as numeric
data$exp1<-as.numeric(data$exp1) #exp1 = at-issue question
data$exp2<-as.numeric(data$exp2) #exp2 = not-at-issue question
data$pref<-as.numeric(data$pref)
#negative pref value means mc at-issue better
#positive value means rc at-issue better
data$Q_where <- data$exp1
data$Q_food <- data$exp2
data <- data %>%
mutate(Q_where = case_when(
(item == "t2") ~ exp2,
(item == "t1") ~ exp1,
))
data <- data %>%
mutate(Q_food = case_when(
(item == "t2") ~ exp1,
(item == "t1") ~ exp2,
))
data <- data %>%
mutate(item = case_when(
(item == "t2") ~ "(5b)",
(item == "t1") ~ "(5a)",
))
#expectedness means by context for question "Where is Peter?"
means.q_where = data %>%
group_by(item) %>%
summarize(Mean.Q_where = mean(Q_where), CILow=ci.low(Q_where),CIHigh=ci.high(Q_where))%>%
ungroup() %>%
mutate(YMin=Mean.Q_where-CILow,YMax=Mean.Q_where+CIHigh)
#add column for question
means.q_where$question <- "Where is Peter?"
#expectedness means by context for question "What food does Peter like?"
means.q_food = data %>%
group_by(item) %>%
summarize(Mean.Q_food = mean(Q_food), CILow=ci.low(Q_food),CIHigh=ci.high(Q_food))%>%
ungroup() %>%
mutate(YMin=Mean.Q_food-CILow,YMax=Mean.Q_food+CIHigh)
#add column for question
means.q_food$question <- "What food does Peter like?"
# Expectedness means by context and question
ggplot() +
geom_point(data = means.q_where, aes(x = item, y = Mean.Q_where), alpha = 1, shape=16, color="blue", size=4)+
geom_text(data = means.q_where, aes(x = item, y = Mean.Q_where, label = question, vjust=3.5))+
geom_errorbar(data = means.q_where, aes(x = item, ymin=YMin,ymax=YMax),width=.05,color="black") +
geom_point(data = means.q_food, aes(x = item, y = Mean.Q_food), alpha = 1, shape=17, color="orange", size=4)+
geom_text(data = means.q_food, aes(x = item, y = Mean.Q_food, label = question, vjust=4))+
geom_errorbar(data = means.q_food, aes(x = item, ymin=YMin,ymax=YMax),width=.05,color="black") +
xlab("Context") +
ylab("Expectedness rating") +
scale_y_continuous(breaks=c(0,1),labels=c("absolutely\nunexpected","absolutely\nexpected"),
limits = c(0,1)) +
theme(panel.spacing.x = unit(4, "mm"))
ggsave("../graphs/exp_by_item_and_question.png",height=3.5,width=4.5)
q_type <- c("Q evoked", "Q not evoked")
exp.mean <- c(mean(data$exp1), mean(data$exp2))
YMin <- c(mean(data$exp1) - ci.low(data$exp1), mean(data$exp2) - ci.low(data$exp2))
YMax <- c(mean(data$exp1) + ci.high(data$exp1), mean(data$exp2) + ci.high(data$exp2))
df <- data.frame(q_type, exp.mean, YMin, YMax)
# Expectedness means by context question (mis)match
ggplot(df, aes(x=q_type, y=exp.mean)) +
geom_point(shape=20, size=5, alpha=0.5,colour="blue") +
geom_errorbar(aes(x = q_type, ymin=YMin,ymax=YMax),width=.1,color="black") +
#geom_errorbar(aes(x=q_type, ymin=exp.mean-sd, ymax=exp.mean+sd), width=0.2) +
xlab("Context-question relation\n(95% bootstrapped confidence intervals)") +
ylab("Expectedness rating") +
scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
theme(panel.spacing.x = unit(4, "mm")) #+
#facet_wrap(. ~ at_issue)
ggsave("../graphs/exp_by_q_type.png",height=3,width=3)
#preference means by item
means.item = data %>%
group_by(item) %>%
summarize(Mean.pref = mean(pref), CILow=ci.low(pref),CIHigh=ci.high(pref))%>%
ungroup() %>%
mutate(YMin=Mean.pref-CILow,YMax=Mean.pref+CIHigh)
#new column for swapped pref ratings if item (5b)
data$pref_swapped <- data$pref
data <- data %>%
mutate(pref_swapped = case_when(
(item == "(5a)") ~ pref,
(item == "(5b)") ~ -pref,
))
#preference means by item ((5b) swapped)
means.item2 = data %>%
group_by(item) %>%
summarize(Mean.pref2 = mean(pref_swapped), CILow2=ci.low(pref_swapped),CIHigh2=ci.high(pref_swapped))%>%
ungroup() %>%
mutate(YMin=Mean.pref2-CILow2,YMax=Mean.pref2+CIHigh2)
#plot preference means per item ((5b) swapped)
ggplot(means.item2, aes(x=item, y=Mean.pref2)) +
geom_point(shape=20, size=5, alpha=0.5,colour="blue") +
geom_errorbar(data = means.item2, aes(x = item, ymin=YMin,ymax=YMax),width=.05,color="black") +
xlab("Context") +
ylab("Mean preference rating") +
scale_y_continuous(breaks=c(-1,0,1),labels=c("A much better","equally good","B much better"),
limits = c(-1.1,1.1)) +
theme(panel.spacing.x = unit(4, "mm")) #+
#facet_wrap(. ~ at_issue)
ggsave("../graphs/preference_mean_by_item_swapped.png",height=4,width=4)
#violin plot preference per item ((5b) swapped)
ggplot() +
geom_violin(data = data, aes(x = item, y = pref_swapped), alpha = .5)+
geom_point(data = means.item2, aes(x = item, y = Mean.pref2, color = item, shape = item, legend = NULL), size=3, alpha=1) +
guides(color = "none") +
guides(shape = "none") +
scale_color_manual(values = c("(5a)" = "blue", "(5b)" = "orange"))+
geom_dotplot(data = data, aes(x = item, y = pref_swapped), binaxis = "y", binwidth=0.2,
stackdir = "center", dotsize = 0.2, fill="gray40", alpha=.6, color="gray20") +
geom_errorbar(data = means.item2, aes(x = item, ymin=YMin,ymax=YMax),width=.05,color="black") +
xlab("Context") +
ylab("Preference rating") +
scale_y_continuous(breaks=c(-1,0,1),labels=c("A much better","equally good","B much better"),
limits = c(-1,1))
# set working directory to directory of script
this.dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(this.dir)
library(readr)
library(lme4)
library(tidyverse)
library(ggrepel)
library(lsmeans)
library(lmerTest)
theme_set(theme_bw())
########################################################
source("C:/Arbeit/R statistics/helpers.r")
#### load data ###########
data <- read.csv("../data/preprocessed_data/data.csv", sep = ";")
nrow(data) #20
summary(data)
table(data$list)
# 10 per list
#### Interpret exp (expectedness rating) and pref (preference rating) as numeric
data$exp1<-as.numeric(data$exp1) #exp1 = at-issue question
data$exp2<-as.numeric(data$exp2) #exp2 = not-at-issue question
data$pref<-as.numeric(data$pref)
#negative pref value means mc at-issue better
#positive value means rc at-issue better
data$Q_where <- data$exp1
data$Q_food <- data$exp2
data <- data %>%
mutate(Q_where = case_when(
(item == "t2") ~ exp2,
(item == "t1") ~ exp1,
))
data <- data %>%
mutate(Q_food = case_when(
(item == "t2") ~ exp1,
(item == "t1") ~ exp2,
))
data <- data %>%
mutate(item = case_when(
(item == "t2") ~ "(5b)",
(item == "t1") ~ "(5a)",
))
#expectedness means by context for question "Where is Peter?"
means.q_where = data %>%
group_by(item) %>%
summarize(Mean.Q_where = mean(Q_where), CILow=ci.low(Q_where),CIHigh=ci.high(Q_where))%>%
ungroup() %>%
mutate(YMin=Mean.Q_where-CILow,YMax=Mean.Q_where+CIHigh)
#add column for question
means.q_where$question <- "Where is Peter?"
#expectedness means by context for question "What food does Peter like?"
means.q_food = data %>%
group_by(item) %>%
summarize(Mean.Q_food = mean(Q_food), CILow=ci.low(Q_food),CIHigh=ci.high(Q_food))%>%
ungroup() %>%
mutate(YMin=Mean.Q_food-CILow,YMax=Mean.Q_food+CIHigh)
#add column for question
means.q_food$question <- "What food does Peter like?"
# Expectedness means by context and question
ggplot() +
geom_point(data = means.q_where, aes(x = item, y = Mean.Q_where), alpha = 1, shape=16, color="blue", size=4)+
geom_text(data = means.q_where, aes(x = item, y = Mean.Q_where, label = question, vjust=3.5))+
geom_errorbar(data = means.q_where, aes(x = item, ymin=YMin,ymax=YMax),width=.05,color="black") +
geom_point(data = means.q_food, aes(x = item, y = Mean.Q_food), alpha = 1, shape=17, color="orange", size=4)+
geom_text(data = means.q_food, aes(x = item, y = Mean.Q_food, label = question, vjust=4))+
geom_errorbar(data = means.q_food, aes(x = item, ymin=YMin,ymax=YMax),width=.05,color="black") +
xlab("Context") +
ylab("Expectedness rating") +
scale_y_continuous(breaks=c(0,1),labels=c("absolutely\nunexpected","absolutely\nexpected"),
limits = c(0,1)) +
theme(panel.spacing.x = unit(4, "mm"))
ggsave("../graphs/exp_by_item_and_question.png",height=3.5,width=4.5)
q_type <- c("Q evoked", "Q not evoked")
exp.mean <- c(mean(data$exp1), mean(data$exp2))
YMin <- c(mean(data$exp1) - ci.low(data$exp1), mean(data$exp2) - ci.low(data$exp2))
YMax <- c(mean(data$exp1) + ci.high(data$exp1), mean(data$exp2) + ci.high(data$exp2))
df <- data.frame(q_type, exp.mean, YMin, YMax)
# Expectedness means by context question (mis)match
ggplot(df, aes(x=q_type, y=exp.mean)) +
geom_point(shape=20, size=5, alpha=0.5,colour="blue") +
geom_errorbar(aes(x = q_type, ymin=YMin,ymax=YMax),width=.1,color="black") +
#geom_errorbar(aes(x=q_type, ymin=exp.mean-sd, ymax=exp.mean+sd), width=0.2) +
xlab("Context-question relation\n(95% bootstrapped confidence intervals)") +
ylab("Expectedness rating") +
scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
theme(panel.spacing.x = unit(4, "mm")) #+
#facet_wrap(. ~ at_issue)
ggsave("../graphs/exp_by_q_type.png",height=3,width=3)
#preference means by item
means.item = data %>%
group_by(item) %>%
summarize(Mean.pref = mean(pref), CILow=ci.low(pref),CIHigh=ci.high(pref))%>%
ungroup() %>%
mutate(YMin=Mean.pref-CILow,YMax=Mean.pref+CIHigh)
#new column for swapped pref ratings if item (5b)
data$pref_swapped <- data$pref
data <- data %>%
mutate(pref_swapped = case_when(
(item == "(5a)") ~ pref,
(item == "(5b)") ~ -pref,
))
#preference means by item ((5b) swapped)
means.item2 = data %>%
group_by(item) %>%
summarize(Mean.pref2 = mean(pref_swapped), CILow2=ci.low(pref_swapped),CIHigh2=ci.high(pref_swapped))%>%
ungroup() %>%
mutate(YMin=Mean.pref2-CILow2,YMax=Mean.pref2+CIHigh2)
#plot preference means per item ((5b) swapped)
ggplot(means.item2, aes(x=item, y=Mean.pref2)) +
geom_point(shape=20, size=5, alpha=0.5,colour="blue") +
geom_errorbar(data = means.item2, aes(x = item, ymin=YMin,ymax=YMax),width=.05,color="black") +
xlab("Context") +
ylab("Mean preference rating") +
scale_y_continuous(breaks=c(-1,0,1),labels=c("A much better","equally good","B much better"),
limits = c(-1.1,1.1)) +
theme(panel.spacing.x = unit(4, "mm")) #+
#facet_wrap(. ~ at_issue)
ggsave("../graphs/preference_mean_by_item_swapped.png",height=4,width=4)
#violin plot preference per item ((5b) swapped)
ggplot() +
geom_violin(data = data, aes(x = item, y = pref_swapped), alpha = .5)+
geom_point(data = means.item2, aes(x = item, y = Mean.pref2, color = item, shape = item, legend = NULL), size=3, alpha=1) +
guides(color = "none") +
guides(shape = "none") +
scale_color_manual(values = c("(5a)" = "blue", "(5b)" = "orange"))+
geom_dotplot(data = data, aes(x = item, y = pref_swapped), binaxis = "y", binwidth=0.2,
stackdir = "center", dotsize = 0.2, fill="gray40", alpha=.6, color="gray20") +
geom_errorbar(data = means.item2, aes(x = item, ymin=YMin,ymax=YMax),width=.05,color="black") +
xlab("Context") +
ylab("Preference rating") +
scale_y_continuous(breaks=c(-1,0,1),labels=c("A much better","equally good","B much better"),
limits = c(-1,1))
#coord_flip()
#theme(panel.spacing.x = unit(4, "mm"))
ggsave("../graphs/preference_by_item_swapped.png",height=3,width=3)
#violin plot preference per item ((5b) swapped)
ggplot() +
geom_violin(data = data, aes(x = item, y = pref_swapped), alpha = .5)+
geom_point(data = means.item2, aes(x = item, y = Mean.pref2, color = item, shape = item, legend = NULL), size=3, alpha=1) +
guides(color = "none") +
guides(shape = "none") +
scale_color_manual(values = c("(5a)" = "blue", "(5b)" = "orange"))+
geom_dotplot(data = data, aes(x = item, y = pref_swapped), binaxis = "y", binwidth=0.2,
stackdir = "center", dotsize = 0.2, fill="gray40", alpha=.6, color="gray20") +
geom_errorbar(data = means.item2, aes(x = item, ymin=YMin,ymax=YMax),width=.05,color="black") +
xlab("Context") +
ylab("Preference rating") +
scale_y_continuous(breaks=c(-1,0,1),labels=c("A much better","equally good","B much better"),
limits = c(-1,1))
# Expectedness means by context and question
ggplot() +
geom_point(data = means.q_where, aes(x = item, y = Mean.Q_where), alpha = 1, shape=16, color="blue", size=4)+
geom_text(data = means.q_where, aes(x = item, y = Mean.Q_where, label = question, vjust=3.5))+
geom_errorbar(data = means.q_where, aes(x = item, ymin=YMin,ymax=YMax),width=.05,color="black") +
geom_point(data = means.q_food, aes(x = item, y = Mean.Q_food), alpha = 1, shape=17, color="orange", size=4)+
geom_text(data = means.q_food, aes(x = item, y = Mean.Q_food, label = question, vjust=4))+
geom_errorbar(data = means.q_food, aes(x = item, ymin=YMin,ymax=YMax),width=.05,color="black") +
xlab("Context") +
ylab("Expectedness rating") +
scale_y_continuous(breaks=c(0,1),labels=c("absolutely\nunexpected","absolutely\nexpected"),
limits = c(0,1)) +
theme(panel.spacing.x = unit(4, "mm"))
ggsave("../graphs/exp_by_item_and_question.png",height=3,width=4)
# Expectedness means by context and question
ggplot() +
geom_point(data = means.q_where, aes(x = item, y = Mean.Q_where), alpha = 1, shape=16, color="blue", size=4)+
geom_text(data = means.q_where, aes(x = item, y = Mean.Q_where, label = question, vjust=3.5))+
geom_errorbar(data = means.q_where, aes(x = item, ymin=YMin,ymax=YMax),width=.05,color="black") +
geom_point(data = means.q_food, aes(x = item, y = Mean.Q_food), alpha = 1, shape=17, color="orange", size=4)+
geom_text(data = means.q_food, aes(x = item, y = Mean.Q_food, label = question, vjust=4))+
geom_errorbar(data = means.q_food, aes(x = item, ymin=YMin,ymax=YMax),width=.05,color="black") +
xlab("Context") +
ylab("Expectedness rating") +
scale_y_continuous(breaks=c(0,1),labels=c("absolutely\nunexpected","absolutely\nexpected"),
limits = c(0,1)) +
theme(panel.spacing.x = unit(4, "mm"))
ggsave("../graphs/exp_by_item_and_question.png",height=3,width=4)
#violin plot preference per item ((5b) swapped)
ggplot() +
geom_violin(data = data, aes(x = item, y = pref_swapped), alpha = .5)+
geom_point(data = means.item2, aes(x = item, y = Mean.pref2, color = item, shape = item, legend = NULL), size=3, alpha=1) +
guides(color = "none") +
guides(shape = "none") +
scale_color_manual(values = c("(5a)" = "blue", "(5b)" = "orange"))+
geom_dotplot(data = data, aes(x = item, y = pref_swapped), binaxis = "y", binwidth=0.2,
stackdir = "center", dotsize = 0.2, fill="gray40", alpha=.6, color="gray20") +
geom_errorbar(data = means.item2, aes(x = item, ymin=YMin,ymax=YMax),width=.05,color="black") +
xlab("Context") +
ylab("Preference rating") +
scale_y_continuous(breaks=c(-1,0,1),labels=c("A much better","equally good","B much better"),
limits = c(-1,1))
#coord_flip()
#theme(panel.spacing.x = unit(4, "mm"))
ggsave("../graphs/preference_by_item_swapped.png",height=3,width=3)
# Expectedness means by context and question
ggplot() +
geom_point(data = means.q_where, aes(x = item, y = Mean.Q_where), alpha = 1, shape=16, color="blue", size=4)+
geom_text(data = means.q_where, aes(x = item, y = Mean.Q_where, label = question, vjust=3.5))+
geom_errorbar(data = means.q_where, aes(x = item, ymin=YMin,ymax=YMax),width=.05,color="black") +
geom_point(data = means.q_food, aes(x = item, y = Mean.Q_food), alpha = 1, shape=17, color="orange", size=4)+
geom_text(data = means.q_food, aes(x = item, y = Mean.Q_food, label = question, vjust=4))+
geom_errorbar(data = means.q_food, aes(x = item, ymin=YMin,ymax=YMax),width=.05,color="black") +
xlab("Context") +
ylab("Expectedness rating") +
scale_y_continuous(breaks=c(0,1),labels=c("absolutely\nunexpected","absolutely\nexpected"),
limits = c(0,1)) +
theme(panel.spacing.x = unit(4, "mm"))
ggsave("../graphs/exp_by_item_and_question.png",height=3,width=4.5)
# Expectedness means by context and question
ggplot() +
geom_point(data = means.q_where, aes(x = item, y = Mean.Q_where), alpha = 1, shape=16, color="blue", size=4)+
geom_text(data = means.q_where, aes(x = item, y = Mean.Q_where, label = question, vjust=3))+
geom_errorbar(data = means.q_where, aes(x = item, ymin=YMin,ymax=YMax),width=.05,color="black") +
geom_point(data = means.q_food, aes(x = item, y = Mean.Q_food), alpha = 1, shape=17, color="orange", size=4)+
geom_text(data = means.q_food, aes(x = item, y = Mean.Q_food, label = question, vjust=4))+
geom_errorbar(data = means.q_food, aes(x = item, ymin=YMin,ymax=YMax),width=.05,color="black") +
xlab("Context") +
ylab("Expectedness rating") +
scale_y_continuous(breaks=c(0,1),labels=c("absolutely\nunexpected","absolutely\nexpected"),
limits = c(0,1)) +
theme(panel.spacing.x = unit(4, "mm"))
ggsave("../graphs/exp_by_item_and_question.png",height=3,width=4.5)
# Expectedness means by context and question
ggplot() +
geom_point(data = means.q_where, aes(x = item, y = Mean.Q_where), alpha = 1, shape=16, color="blue", size=4)+
geom_text(data = means.q_where, aes(x = item, y = Mean.Q_where, label = question, vjust=3))+
geom_errorbar(data = means.q_where, aes(x = item, ymin=YMin,ymax=YMax),width=.05,color="black") +
geom_point(data = means.q_food, aes(x = item, y = Mean.Q_food), alpha = 1, shape=17, color="orange", size=4)+
geom_text(data = means.q_food, aes(x = item, y = Mean.Q_food, label = question, vjust=3))+
geom_errorbar(data = means.q_food, aes(x = item, ymin=YMin,ymax=YMax),width=.05,color="black") +
xlab("Context") +
ylab("Expectedness rating") +
scale_y_continuous(breaks=c(0,1),labels=c("absolutely\nunexpected","absolutely\nexpected"),
limits = c(0,1)) +
theme(panel.spacing.x = unit(4, "mm"))
ggsave("../graphs/exp_by_item_and_question.png",height=3,width=4.5)
# Expectedness means by context and question
ggplot() +
geom_point(data = means.q_where, aes(x = item, y = Mean.Q_where), alpha = 1, shape=16, color="blue", size=4)+
geom_text(data = means.q_where, aes(x = item, y = Mean.Q_where, label = question, vjust=3))+
geom_errorbar(data = means.q_where, aes(x = item, ymin=YMin,ymax=YMax),width=.05,color="black") +
geom_point(data = means.q_food, aes(x = item, y = Mean.Q_food), alpha = 1, shape=17, color="orange", size=4)+
geom_text(data = means.q_food, aes(x = item, y = Mean.Q_food, label = question, vjust=3.5))+
geom_errorbar(data = means.q_food, aes(x = item, ymin=YMin,ymax=YMax),width=.05,color="black") +
xlab("Context") +
ylab("Expectedness rating") +
scale_y_continuous(breaks=c(0,1),labels=c("absolutely\nunexpected","absolutely\nexpected"),
limits = c(0,1)) +
theme(panel.spacing.x = unit(4, "mm"))
ggsave("../graphs/exp_by_item_and_question.png",height=3,width=4.5)
