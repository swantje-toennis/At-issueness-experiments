this.dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(this.dir)
#install.packages("remotes")
#remotes::install_github("dmirman/gazer")
library(readr)
library(lme4)
library(tidyverse)
library(ggrepel)
library(lsmeans)
library(lmerTest)
########################################################
source("C:/Arbeit/R statistics/mer-utils.r")
source("C:/Arbeit/R statistics/regression-utils.r")
source("C:/Arbeit/R statistics/diagnostic_fcns.r")
source("C:/Arbeit/R statistics/boot_glmm.r")
source("C:/Arbeit/R statistics/helpers.r")
#### load data ###########
data <- read.csv("../data/preprocessed_data/data.csv", sep = ";")
nrow(data) #150
View(data)
#### Interpret exp (expectedness rating) as factor and cer (certainty rating) as numbers
data$exp<-as.numeric(data$exp)
data$cer<-as.numeric(data$cer)
#### model 1 -- cer (certainty rating) as dependent variable
# with varying intercepts and slopes for participant ('participant')
# and varying intercepts and slopes for item ('item_no'),
#aboutness 1 and 2 as fixed effects interaction
model1 <- lmer(cer ~ exp * condition + (1 + exp|participant), data = data,
REML=F,control = lmerControl(optimizer ='optimx', optCtrl=list(method='L-BFGS-B')))
#### model 1 -- cer (certainty rating) as dependent variable
# with varying intercepts and slopes for participant ('participant')
# and varying intercepts and slopes for item ('item_no'),
#aboutness 1 and 2 as fixed effects interaction
model1 <- lmer(cer ~ exp * condition + (1 + cer|participant), data = data,
REML=F,control = lmerControl(optimizer ='optimx', optCtrl=list(method='L-BFGS-B')))
#### model 1 -- cer (certainty rating) as dependent variable
# with varying intercepts and slopes for participant ('participant')
# and varying intercepts and slopes for item ('item_no'),
#aboutness 1 and 2 as fixed effects interaction
model1 <- lmer(condition ~ exp * cer + (1 + exp|participant), data = data,
REML=F,control = lmerControl(optimizer ='optimx', optCtrl=list(method='L-BFGS-B')))
#### model 1 -- cer (certainty rating) as dependent variable
# with varying intercepts and slopes for participant ('participant')
# and varying intercepts and slopes for item ('item_no'),
#aboutness 1 and 2 as fixed effects interaction
model1 <- lmer(exp ~ condition, data = data,
REML=F,control = lmerControl(optimizer ='optimx', optCtrl=list(method='L-BFGS-B')))
#### model 1 -- cer (certainty rating) as dependent variable
# with varying intercepts and slopes for participant ('participant')
# and varying intercepts and slopes for item ('item_no'),
#aboutness 1 and 2 as fixed effects interaction
model1 <- lm(exp ~ condition, data = data,
REML=F,control = lmerControl(optimizer ='optimx', optCtrl=list(method='L-BFGS-B')))
#### model 1 -- cer (certainty rating) as dependent variable
# with varying intercepts and slopes for participant ('participant')
# and varying intercepts and slopes for item ('item_no'),
#aboutness 1 and 2 as fixed effects interaction
model1 <- lm(exp ~ condition, data = data)
#get p-values
summary(model1) # aboutness not significant
#### model 1 -- cer (certainty rating) as dependent variable
# with varying intercepts and slopes for participant ('participant')
# and varying intercepts and slopes for item ('item_no'),
#aboutness 1 and 2 as fixed effects interaction
model1 <- lm(condition ~ exp, data = data)
#### model 1 -- cer (certainty rating) as dependent variable
# with varying intercepts and slopes for participant ('participant')
# and varying intercepts and slopes for item ('item_no'),
#aboutness 1 and 2 as fixed effects interaction
model1 <- lm(cer ~ condition, data = data)
#get p-values
summary(model1) # aboutness not significant
#get p-values
summary(model1) # aboutness not significant
#### model 1 -- cer (certainty rating) as dependent variable
# with varying intercepts and slopes for participant ('participant')
# and varying intercepts and slopes for item ('item_no'),
#aboutness 1 and 2 as fixed effects interaction
model1 <- lm(exp ~ condition, data = data)
#get p-values
summary(model1) # aboutness not significant
#### model 2 -- cer (certainty rating) as dependent variable
# with varying intercepts for participant ('participant')
# and varying intercepts for item ('item_no'),
#aboutness 1 and 2 as fixed effects (without interaction)
model2 <- lm(cer * exp ~ condition)
#### model 2 -- cer (certainty rating) as dependent variable
# with varying intercepts for participant ('participant')
# and varying intercepts for item ('item_no'),
#aboutness 1 and 2 as fixed effects (without interaction)
model2 <- lm(cer * exp ~ condition, data = data)
#get p-values
summary(model2) # aboutness not significant
#### model 2 -- cer (certainty rating) as dependent variable
# with varying intercepts for participant ('participant')
# and varying intercepts for item ('item_no'),
#aboutness 1 and 2 as fixed effects (without interaction)
model2 <- lmer(cer * exp ~ condition + (1|participant), data = data,
REML=F,control = lmerControl(optimizer ='optimx', optCtrl=list(method='L-BFGS-B')))
#### model 2 -- linear model predicting interaction of certainty and expectedness
#ratings from condition
model2 <- lm(exp * cer ~ condition, data = data)
#get p-values
summary(model2) # expectedness rating not significantly different
#get p-values
summary(model2) # interaction of exp and cer not significantly different
#### model 1' -- linear model predicting certainty ratings from condition
model1'' <- lm(cer ~ condition, data = data)
#### model 1' -- linear model predicting certainty ratings from condition
model1' <- lm(cer ~ condition, data = data)
#get p-values
summary(model1') # expectedness rating not significantly different
#### model 1a -- linear model predicting certainty ratings from condition
model1a <- lm(cer ~ condition, data = data)
#get p-values
summary(model1a) # expectedness rating not significantly different
#get p-values
summary(model1a) # certainty rating significantly different
# set working directory to directory of script
this.dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(this.dir)
library(readr)
library(lme4)
library(tidyverse)
library(ggrepel)
library(lsmeans)
library(lmerTest)
theme_set(theme_bw())
########################################################
source("C:/Arbeit/R statistics/helpers.r")
#### load data ###########
data <- read.csv("../data/preprocessed_data/data.csv", sep = ";")
nrow(data) #40 = 40 participants x 1 target item
summary(data)
table(data$condition)
#### Interpret exp (expectedness rating) as factor and continue (continuetainty rating) as numbers
data$exp<-as.numeric(data$exp)
data$cer<-as.numeric(data$cer)
#Plot means
means = data %>%
group_by(condition) %>%
summarize(Mean.exp = mean(exp), sd.exp = sd(exp)) %>%
ungroup()
# plot expectedness ratings by condition
ggplot(data, aes(x=condition, y=exp)) +
geom_point(shape=20, size=5, alpha=1,colour="blue") +
geom_errorbar(aes(x=condition, ymin=mean(exp)-sd(exp), ymax=mean(exp)+sd(exp)), width=0.25) +
xlab("Condition") +
ylab("Expectedness rating") +
scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(-0.01,1.1)) +
theme(panel.spacing.x = unit(4, "mm")) #+
#facet_wrap(. ~ at_issue)
ggsave("../graphs/exp_by_condition.png",height=4,width=5)
# plot expectedness ratings by condition
ggplot(data, aes(x=condition, y=exp)) +
jitter(shape=20, size=5, alpha=1,colour="blue") +
geom_errorbar(aes(x=condition, ymin=mean(exp)-sd(exp), ymax=mean(exp)+sd(exp)), width=0.25) +
xlab("Condition") +
ylab("Expectedness rating") +
scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(-0.01,1.1)) +
theme(panel.spacing.x = unit(4, "mm")) #+
# plot expectedness ratings by condition
ggplot(data, aes(x=condition, y=exp)) +
geom_jitter(shape=20, size=5, alpha=1,colour="blue") +
geom_errorbar(aes(x=condition, ymin=mean(exp)-sd(exp), ymax=mean(exp)+sd(exp)), width=0.25) +
xlab("Condition") +
ylab("Expectedness rating") +
scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(-0.01,1.1)) +
theme(panel.spacing.x = unit(4, "mm")) #+
summary(data)
table(data$condition)
#### Interpret exp (expectedness rating) as factor and continue (continuetainty rating) as
# plot expectedness ratings by condition
ggplot(data, aes(x=condition, y=exp)) +
geom_jitter(shape=20, size=5, alpha=0.5,colour="blue") +
geom_errorbar(aes(x=condition, ymin=mean(exp)-sd(exp), ymax=mean(exp)+sd(exp)), width=0.25) +
xlab("Condition") +
ylab("Expectedness rating") +
scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(-0.01,1.1)) +
theme(panel.spacing.x = unit(4, "mm")) #+
# plot expectedness ratings by condition
ggplot(data, aes(x=condition, y=exp)) +
geom_jitter(shape=20, size=5, alpha=0.1,colour="blue") +
geom_errorbar(aes(x=condition, ymin=mean(exp)-sd(exp), ymax=mean(exp)+sd(exp)), width=0.25) +
xlab("Condition") +
ylab("Expectedness rating") +
scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(-0.01,1.1)) +
theme(panel.spacing.x = unit(4, "mm")) #+
# plot expectedness ratings by condition
ggplot(data, aes(x=condition, y=exp)) +
geom_jitter(shape=20, size=5, alpha=0.5,colour="blue") +
geom_errorbar(aes(x=condition, ymin=mean(exp)-sd(exp), ymax=mean(exp)+sd(exp)), width=0.25) +
xlab("Condition") +
ylab("Expectedness rating") +
scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(-0.01,1.1)) +
theme(panel.spacing.x = unit(4, "mm")) #+
# plot expectedness ratings by condition
ggplot(data, aes(x=condition, y=exp)) +
geom_jitter(shape=20, size=5, alpha=0.5,colour="blue") +
#geom_errorbar(aes(x=condition, ymin=mean(exp)-sd(exp), ymax=mean(exp)+sd(exp)), width=0.25) +
xlab("Condition") +
ylab("Expectedness rating") +
scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(-0.01,1.1)) +
theme(panel.spacing.x = unit(4, "mm")) #+
# plot expectedness ratings by condition
ggplot(data, aes(x=condition, y=exp)) +
geom_jitter(shape=20, size=5, alpha=0.7,colour="blue") +
geom_errorbar(aes(x=condition, ymin=mean(exp)-sd(exp), ymax=mean(exp)+sd(exp)), width=0.25) +
xlab("Condition") +
ylab("Expectedness rating") +
scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(-0.01,1.1)) +
theme(panel.spacing.x = unit(4, "mm")) #+
# plot expectedness ratings by condition
ggplot(data, aes(x=condition, y=exp)) +
geom_point(shape=20, size=5, alpha=0.5,colour="blue") +
geom_errorbar(aes(x=condition, ymin=mean(exp)-sd(exp), ymax=mean(exp)+sd(exp)), width=0.25) +
xlab("Condition") +
ylab("Expectedness rating") +
scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(-0.01,1.1)) +
theme(panel.spacing.x = unit(4, "mm")) #+
# plot expectedness ratings by condition
ggplot(data, aes(x=condition, y=exp)) +
geom_point(shape=20, size=3, alpha=0.5,colour="blue") +
geom_errorbar(aes(x=condition, ymin=mean(exp)-sd(exp), ymax=mean(exp)+sd(exp)), width=0.25) +
xlab("Condition") +
ylab("Expectedness rating") +
scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(-0.01,1.1)) +
theme(panel.spacing.x = unit(4, "mm")) #+
# plot expectedness ratings by condition
ggplot(data, aes(x=condition, y=exp)) +
geom_point(shape=20, size=4, alpha=0.4,colour="blue") +
geom_errorbar(aes(x=condition, ymin=mean(exp)-sd(exp), ymax=mean(exp)+sd(exp)), width=0.25) +
xlab("Condition") +
ylab("Expectedness rating") +
scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(-0.01,1.1)) +
theme(panel.spacing.x = unit(4, "mm")) #+
# plot expectedness ratings by condition
ggplot(data, aes(x=condition, y=exp)) +
geom_jitter(shape=20, size=5, alpha=0.7,colour="blue") +
geom_errorbar(aes(x=condition, ymin=mean(exp)-sd(exp), ymax=mean(exp)+sd(exp)), width=0.25) +
xlab("Condition") +
ylab("Expectedness rating") +
scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(-0.01,1.1)) +
theme(panel.spacing.x = unit(4, "mm")) #+
# plot expectedness ratings by condition
ggplot(data, aes(x=condition, y=exp)) +
geom_jitter(shape=20, size=5, alpha=0.6,colour="blue") +
geom_errorbar(aes(x=condition, ymin=mean(exp)-sd(exp), ymax=mean(exp)+sd(exp)), width=0.25) +
xlab("Condition") +
ylab("Expectedness rating") +
scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(-0.01,1.1)) +
theme(panel.spacing.x = unit(4, "mm")) #+
# plot expectedness ratings by condition
ggplot(data, aes(x=condition, y=exp)) +
geom_jitter(shape=20, size=5, alpha=0.5,colour="blue") +
geom_errorbar(aes(x=condition, ymin=mean(exp)-sd(exp), ymax=mean(exp)+sd(exp)), width=0.25) +
xlab("Condition") +
ylab("Expectedness rating") +
scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(-0.01,1.1)) +
theme(panel.spacing.x = unit(4, "mm")) #+
# plot expectedness ratings by condition
ggplot(data, aes(x=condition, y=exp)) +
geom_point(shape=20, size=5, alpha=0.5,colour="blue") +
geom_errorbar(aes(x=condition, ymin=mean(exp)-sd(exp), ymax=mean(exp)+sd(exp)), width=0.25) +
xlab("Condition") +
ylab("Expectedness rating") +
scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(-0.01,1.1)) +
theme(panel.spacing.x = unit(4, "mm")) #+
# plot expectedness ratings by condition
ggplot(data, aes(x=condition, y=exp)) +
geom_point(shape=20, size=5, alpha=0.4,colour="blue") +
geom_errorbar(aes(x=condition, ymin=mean(exp)-sd(exp), ymax=mean(exp)+sd(exp)), width=0.25) +
xlab("Condition") +
ylab("Expectedness rating") +
scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(-0.01,1.1)) +
theme(panel.spacing.x = unit(4, "mm")) #+
#facet_wrap(. ~ at_issue)
ggsave("../graphs/exp_by_condition.png",height=4,width=5)
means.exp = data %>%
group_by(condition) %>%
summarize(Mean.exp = mean(exp), sd.exp = sd(exp)) %>%
ungroup()
means.cer = data %>%
group_by(condition) %>%
summarize(Mean.cer = mean(cer), sd.exp = sd(cer)) %>%
ungroup()
# plot certainty ratings by condition
ggplot(data, aes(x=condition, y=cer)) +
geom_point(shape=20, size=5, alpha=1,colour="blue") +
geom_point(data=means.cer, aes(x=condition,y=Mean.cer, colour="black"))+
geom_errorbar(data= means.cer, aes(x=condition, ymin=Mean.cer-sd.cer, ymax=Mean.cer+sd.cer, width=0.25)) +
xlab("Condition") +
ylab("Certainty rating") +
scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(-0.01,1.1)) +
theme(panel.spacing.x = unit(4, "mm")) #+
means.cer = data %>%
group_by(condition) %>%
summarize(Mean.cer = mean(cer), sd.cer = sd(cer)) %>%
ungroup()
# plot certainty ratings by condition
ggplot(data, aes(x=condition, y=cer)) +
geom_point(shape=20, size=5, alpha=1,colour="blue") +
geom_point(data=means.cer, aes(x=condition,y=Mean.cer, colour="black"))+
geom_errorbar(data= means.cer, aes(x=condition, ymin=Mean.cer-sd.cer, ymax=Mean.cer+sd.cer, width=0.25)) +
xlab("Condition") +
ylab("Certainty rating") +
scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(-0.01,1.1)) +
theme(panel.spacing.x = unit(4, "mm")) #+
means.cer
# set working directory to directory of script
this.dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(this.dir)
library(readr)
library(lme4)
library(tidyverse)
library(ggrepel)
library(lsmeans)
library(lmerTest)
theme_set(theme_bw())
########################################################
source("C:/Arbeit/R statistics/helpers.r")
#### load data ###########
data <- read.csv("../data/preprocessed_data/data.csv", sep = ";")
nrow(data) #40 = 40 participants x 1 target item
summary(data)
table(data$condition)
#### Interpret exp (expectedness rating) as factor and continue (continuetainty rating) as numbers
data$exp<-as.numeric(data$exp)
data$cer<-as.numeric(data$cer)
# plot certainty ratings by condition
ggplot(data, aes(x=condition, y=cer)) +
geom_point(shape=20, size=5, alpha=1,colour="blue") +
geom_point(data=means.cer, aes(x=condition,y=Mean.cer, colour="black"))+
geom_errorbar(data= means.cer, aes(x=condition, ymin=Mean.cer-sd.cer, ymax=Mean.cer+sd.cer, width=0.25)) +
xlab("Condition") +
ylab("Certainty rating") +
scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(-0.01,1.1)) +
theme(panel.spacing.x = unit(4, "mm")) #+
names(data)
# plot certainty ratings by condition
ggplot(data, aes(x=condition, y=cer)) +
geom_point(shape=20, size=5, alpha=1,colour="blue") +
geom_point(means.cer, aes(x=condition,y=Mean.cer, colour="black"))+
geom_errorbar(means.cer, aes(x=condition, ymin=Mean.cer-sd.cer, ymax=Mean.cer+sd.cer, width=0.25)) +
xlab("Condition") +
ylab("Certainty rating") +
scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(-0.01,1.1)) +
theme(panel.spacing.x = unit(4, "mm")) #+
names(data)
names(means.cer)
# plot certainty ratings by condition
ggplot(data, aes(x=condition, y=cer)) +
geom_point(shape=20, size=5, alpha=1,colour="blue") +
geom_point(means.cer, aes(x=condition,y=Mean.cer, colour="black"))+
#geom_errorbar(means.cer, aes(x=condition, ymin=Mean.cer-sd.cer, ymax=Mean.cer+sd.cer, width=0.25)) +
xlab("Condition") +
ylab("Certainty rating") +
scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(-0.01,1.1)) +
theme(panel.spacing.x = unit(4, "mm")) #+
# plot certainty ratings by condition
ggplot(data, aes(x=condition, y=cer)) +
geom_point(shape=20, size=5, alpha=1,colour="blue") +
geom_point(means.cer, aes(x=condition,y=Mean.cer))+
#geom_errorbar(means.cer, aes(x=condition, ymin=Mean.cer-sd.cer, ymax=Mean.cer+sd.cer, width=0.25)) +
xlab("Condition") +
ylab("Certainty rating") +
scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(-0.01,1.1)) +
theme(panel.spacing.x = unit(4, "mm")) #+
+
geom_point(means.cer, aes(x=condition,y=Mean.cer, colour="black"))+
#geom_errorbar(means.cer, aes(x=condition, ymin=Mean.cer-sd.cer, ymax=Mean.cer+sd.cer, width=0.25)) +
xlab("Condition") +
ylab("Certainty rating") +
scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(-0.01,1.1)) +
theme(panel.spacing.x = unit(4, "mm")) #+
# set working directory to directory of script
this.dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(this.dir)
library(readr)
library(lme4)
library(tidyverse)
library(ggrepel)
library(lsmeans)
library(lmerTest)
theme_set(theme_bw())
########################################################
source("C:/Arbeit/R statistics/helpers.r")
#### load data ###########
data <- read.csv("../data/preprocessed_data/data.csv", sep = ";")
nrow(data) #40 = 40 participants x 1 target item
summary(data)
table(data$condition)
#### Interpret exp (expectedness rating) as factor and continue (continuetainty rating) as numbers
data$exp<-as.numeric(data$exp)
data$cer<-as.numeric(data$cer)
#Plot means
means.exp = data %>%
group_by(condition) %>%
summarize(Mean.exp = mean(exp), sd.exp = sd(exp)) %>%
ungroup()
means.cer = data %>%
group_by(condition) %>%
summarize(Mean.cer = mean(cer), sd.cer = sd(cer)) %>%
ungroup()
# plot expectedness ratings by condition
ggplot(data, aes(x=condition, y=exp)) +
geom_point(shape=20, size=5, alpha=0.4,colour="blue") +
geom_errorbar(aes(x=condition, ymin=mean(exp)-sd(exp), ymax=mean(exp)+sd(exp)), width=0.25) +
xlab("Condition") +
ylab("Expectedness rating") +
scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(-0.01,1.1)) +
theme(panel.spacing.x = unit(4, "mm")) #+
#facet_wrap(. ~ at_issue)
ggsave("../graphs/exp_by_condition.png",height=4,width=5)
# plot certainty ratings by condition
ggplot(data, aes(x=condition, y=cer)) +
geom_point(shape=20, size=5, alpha=1,colour="blue") +
geom_point(means.cer, aes(x=condition,y=Mean.cer, colour="black"))+
#geom_errorbar(means.cer, aes(x=condition, ymin=Mean.cer-sd.cer, ymax=Mean.cer+sd.cer, width=0.25)) +
xlab("Condition") +
ylab("Certainty rating") +
scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(-0.01,1.1)) +
theme(panel.spacing.x = unit(4, "mm")) #+
ggplot(data, aes(x=condition, y=cer)) +
geom_point(shape=20, size=5, alpha=1,colour="blue")
ggplot(data, aes(x=condition, y=cer)) +
geom_point(shape=20, size=5, alpha=1,colour="blue") +
geom_point(means.cer, aes(x=condition,y=Mean.cer, colour="black"))
# plot certainty ratings by condition
ggplot(data, aes(x=condition, y=cer)) +
geom_point(shape=20, size=5, alpha=1,colour="blue") +
geom_point(means.cer, aes(x=condition,y=Mean.cer))+
#geom_errorbar(means.cer, aes(x=condition, ymin=Mean.cer-sd.cer, ymax=Mean.cer+sd.cer, width=0.25)) +
xlab("Condition") +
ylab("Certainty rating") +
scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(-0.01,1.1)) +
theme(panel.spacing.x = unit(4, "mm")) #+
ggplot(data, aes(x=condition, y=cer)) +
geom_point(shape=20, size=5, alpha=1,colour="blue") +
geom_point(means.cer, aes(x=condition,y=Mean.cer))
means.cer = data %>%
group_by(condition) %>%
summarize(Mean.cer = mean(cer), sd.cer = sd(cer)) %>%
ungroup()
# plot certainty ratings by condition
ggplot(data, aes(x=condition, y=cer)) +
geom_point(shape=20, size=5, alpha=1,colour="blue") +
geom_point(means.cer, aes(x=condition,y=Mean.cer))
# plot certainty ratings by condition
ggplot(data, aes(x=condition, y=cer)) +
geom_point(shape=20, size=5, alpha=1,colour="blue") +
#geom_point(means.cer, aes(x=condition,y=Mean.cer))+
#geom_errorbar(means.cer, aes(x=condition, ymin=Mean.cer-sd.cer, ymax=Mean.cer+sd.cer, width=0.25)) +
xlab("Condition") +
ylab("Certainty rating") +
scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(-0.01,1.1)) +
theme(panel.spacing.x = unit(4, "mm")) #+
ggplot(data, aes(x=condition, y=cer)) +
geom_point(shape=20, size=5, alpha=1,colour="blue") +
geom_point(data=means.cer, aes(x=condition,y=Mean.cer))
# plot certainty ratings by condition
ggplot(data, aes(x=condition, y=cer)) +
geom_point(shape=20, size=5, alpha=1,colour="blue") +
geom_point(data=means.cer, aes(x=condition,y=Mean.cer))+
geom_errorbar(data=means.cer, aes(x=condition, ymin=Mean.cer-sd.cer, ymax=Mean.cer+sd.cer, width=0.25)) +
xlab("Condition") +
ylab("Certainty rating") +
scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(-0.01,1.1)) +
theme(panel.spacing.x = unit(4, "mm")) #+
# plot certainty ratings by condition
ggplot(data, aes(x=condition, y=cer)) +
geom_point(shape=20, size=5, alpha=1,colour="blue") +
geom_point(data=means.cer, aes(x=condition,y=Mean.cer))+
geom_errorbar(data=means.cer, aes(ymin=Mean.cer-sd.cer, ymax=Mean.cer+sd.cer, width=0.25)) +
xlab("Condition") +
ylab("Certainty rating") +
scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(-0.01,1.1)) +
theme(panel.spacing.x = unit(4, "mm")) #+
# plot certainty ratings by condition
ggplot(data, aes(x=condition, y=cer)) +
geom_point(shape=20, size=5, alpha=1,colour="blue") +
geom_point(data=means.cer, aes(x=condition,y=Mean.cer))+
geom_errorbar(data=means.cer, aes(x=condition, ymin=Mean.cer-sd.cer, ymax=Mean.cer+sd.cer), width=0.25) +
xlab("Condition") +
ylab("Certainty rating") +
scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(-0.01,1.1)) +
theme(panel.spacing.x = unit(4, "mm")) #+
# plot expectedness ratings by condition
ggplot(data, aes(x=condition, y=exp)) +
geom_point(shape=20, size=5, alpha=0.4,colour="blue") +
geom_errorbar(aes(x=condition, ymin=mean(exp)-sd(exp), ymax=mean(exp)+sd(exp)), width=0.25) +
xlab("Condition") +
ylab("Expectedness rating") +
scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(-0.01,1.1)) +
theme(panel.spacing.x = unit(4, "mm")) #+
ggplot(means.cer, aes(x=condition, y=Mean.cer)) +
geom_point(shape=20, size=5, alpha=1,colour="blue") +
geom_point(data=data, aes(x=condition,y=cer))+
geom_errorbar(aes(x=condition, ymin=Mean.cer-sd.cer, ymax=Mean.cer+sd.cer), width=0.25) +
xlab("Condition") +
ylab("Certainty rating") +
scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(-0.01,1.1)) +
theme(panel.spacing.x = unit(4, "mm"))
# plot expectedness ratings by condition
ggplot(means.exp, aes(x=condition, y=Mean.exp)) +
geom_point(shape=20, size=5, alpha=0.4,colour="blue") +
geom_point(data = data, aes(x=condition, y=exp)) +
geom_errorbar(aes(x=condition, ymin=Mean.exp-sd.exp, ymax=Mean.exp+sd.exp), width=0.25) +
xlab("Condition") +
ylab("Expectedness rating") +
scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(-0.01,1.1)) +
theme(panel.spacing.x = unit(4, "mm")) #+
