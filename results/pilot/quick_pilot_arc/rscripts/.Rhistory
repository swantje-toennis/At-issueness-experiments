#facet_wrap(. ~ condition)
ggsave("../graphs/q_like_by_item_type.png",height=4,width=4)
#Plot continuation rating depending on exp1 (Where is Peter?)
ggplot(data, aes(x=exp1, y=continue)) +
geom_jitter(shape=20, size=5, alpha=.3,colour="blue") +
#geom_errorbar(aes(x=item_no, ymin=Mean.exp1-sd.exp1, ymax=Mean.exp1+sd.exp1), width=0.25) +
xlab("Expectedness rating for Where is Peter?") +
ylab("Continuation rating") +
#scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
theme(panel.spacing.x = unit(4, "mm")) +
facet_wrap(. ~ condition)
ggsave("../graphs/correl_exp_loc&continue.png",height=5,width=4)
#Plot continuation rating depending on exp2 (What does Peter like?)
ggplot(data, aes(x=exp2, y=continue)) +
geom_jitter(shape=20, size=5, alpha=.3,colour="blue") +
#geom_errorbar(aes(x=item_no, ymin=Mean.exp1-sd.exp1, ymax=Mean.exp1+sd.exp1), width=0.25) +
xlab("Expectedness rating for What does Peter like?") +
ylab("Continuation rating") +
#scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
theme(panel.spacing.x = unit(4, "mm")) +
facet_wrap(. ~ condition)
ggsave("../graphs/correl_exp_like&continue.png",height=5,width=4)
## plot mean continuetainty and mean aboutness1 ratings separately for the items
#aboutness1 mean per item
exp1.item = data %>%
group_by(item,condition) %>%
summarize(Mean.exp1 = mean(exp1), sd.exp1 = sd(exp1)) %>%
ungroup() %>%
mutate(item = fct_reorder(as.factor(item),Mean.exp1))
summary(exp1.item)
ggplot(exp1.item, aes(x=condition, y=Mean.exp1)) +
geom_point(shape=20, size=4, alpha=1,colour="blue") +
geom_errorbar(aes(x=condition, ymin=Mean.exp1-sd.exp1, ymax=Mean.exp1+sd.exp1), width=0.25) +
xlab("Condition") +
ylab("Mean expectedness rating Where is Peter?") +
#scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
theme(panel.spacing.x = unit(4, "mm")) #+
#facet_wrap(. ~ condition)
ggsave("../graphs/mean_exp_loc.png",height=3,width=4)
#aboutness2 mean per item
exp2.item = data %>%
group_by(item,condition) %>%
summarize(Mean.exp2 = mean(exp2), sd.exp2 = sd(exp2)) %>%
ungroup() %>%
mutate(item_no = fct_reorder(as.factor(item),Mean.exp2))
summary(exp2.item)
ggplot(exp2.item, aes(x=condition, y=Mean.exp2)) +
geom_point(shape=20, size=4, alpha=1,colour="blue") +
geom_errorbar(aes(x=condition, ymin=Mean.exp2-sd.exp2, ymax=Mean.exp2+sd.exp2), width=0.25) +
xlab("Condition") +
ylab("Mean expectedness rating What does Peter like?") +
#scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
theme(panel.spacing.x = unit(4, "mm"))
ggsave("../graphs/mean_exp_like.png",height=3,width=4)
#continue mean per item
continue.item = data %>%
group_by(item,condition) %>%
summarize(Mean.continue = mean(continue), sd.continue = sd(continue)) %>%
ungroup() %>%
mutate(item_no = fct_reorder(as.factor(item),Mean.continue))
ggplot(continue.item, aes(x=condition, y=Mean.continue)) +
geom_point(shape=20, size=4, alpha=1,colour="blue") +
geom_errorbar(aes(x=condition, ymin=Mean.continue-sd.continue, ymax=Mean.continue+sd.continue), width=0.25) +
xlab("Condition") +
ylab("Mean continuation rating") +
#scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
theme(panel.spacing.x = unit(4, "mm")) #+
#facet_wrap(. ~ condition)
ggsave("../graphs/mean_continuation_rating.png",height=3,width=4)
# set working directory to directory of script
this.dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(this.dir)
library(tidyverse)
library(tidyselect)
library(readr)
library(dplyr)
### Raw data joined in one file #######
# set directory of importing data
setwd('../data/raw_data')
data_raw <- readr::read_csv(list.files(pattern ="*.csv"))
#set back directory to current one
setwd(this.dir)
#check how many participants
data_raw$participant <- as.factor(data_raw$participant)
nlevels(data_raw$participant)
# -> 41 participants
#save participant data
demographics<- data_raw %>% select(one_of('participant','age_enter.text','gender_slider.response','lang_enter.text'))
demographics<- demographics[!is.na(demographics$gender_slider.response) |
!is.na(demographics$age_enter.text) |
!is.na(demographics$lang_enter.text),]
write.table(demographics, file="../data/preprocessed_data/demographics.csv", row.names = FALSE, col.names = TRUE, sep = ";")
demographics$age_enter.text <- as.numeric(demographics$age_enter.text)
# calculate mean age
mean(demographics$age_enter.text)
# 35.12195
#filled in mean age for persons who did not enter age
demographics <- demographics %>%  mutate(age_enter.text = case_when(
(is.na(age_enter.text)) ~ mean(demographics$age_enter.text),
(!is.na(age_enter.text)) ~ age_enter.text,
))
#age range
min(demographics$age_enter.text)
# 20
max(demographics$age_enter.text)
# 63
# Check genders, where 1= female, 2 = male, 3 = non-binary, 4 = other
table(demographics$gender_slider.response)
#  1  2  3
# 22 15  1
# calculate mean age
mean(demographics$age_enter.text)
nlevels(data_raw$participant)
nrow(demographics)
### End participant data
#Remove NA lines
data<- data_raw[!is.na(data_raw$item),]
#move continuation rating next to q expectedness ratings
# subframe only exp ratings
data_about <- data[!is.na(data$position_prop),] %>% select(one_of('position_prop','participant','item','list','condition',
'about_rate1.response','about_rate2.response'))
# subframe only certainty ratings
data_continue <- data[is.na(data$position_prop),] %>% select(one_of('participant','item','list','condition','continue_rate.response'))
# Merge the two frames: Data still including fillers and controls
data_final <- merge(x = data_about, y = data_continue, by = c("participant","item","list","condition"), all.x = TRUE)
data_final$about_rate1.response <- as.numeric(data_final$about_rate1.response)
data_final$about_rate2.response <- as.numeric(data_final$about_rate2.response)
data_final$continue_rate.response <- as.numeric(data_final$continue_rate.response)
#remove columns which are of no use
d <- data_final%>% select(one_of('position_prop','participant','item','list','condition',
'about_rate1.response','about_rate2.response','continue_rate.response'))
#Swap expectedness ratings if order was reversed, i.e. [[0,-0.25],[0,-0.08]] in column position_prop
d$about1 = d$about_rate1.response
d$about2 = d$about_rate2.response
d <- d %>%
mutate(about1 = case_when(
(position_prop == "[[0,-0.25],[0,-0.08]]") ~ about_rate2.response,
(position_prop != "[[0,-0.25],[0,-0.08]]") ~ about_rate1.response,
))
d <- d %>%
mutate(about2 = case_when(
(position_prop == "[[0,-0.25],[0,-0.08]]") ~ about_rate1.response,
(position_prop != "[[0,-0.25],[0,-0.08]]") ~ about_rate2.response,
))
# on how many trials was the slider not moved?
summary(d)
#replacing NA in certainty rating by 0.5 assuming participants just didn't move the marker
d <- d %>%
mutate(continue_rate.response = case_when(
(is.na(continue_rate.response)) ~ 0.5,
(!is.na(continue_rate.response)) ~ continue_rate.response,
))
#replacing NA in aboutness rating by 0.5 assuming participants just didn't move the marker
d <- d %>%
mutate(about1 = case_when(
(is.na(about1)) ~ 0.5,
(!is.na(about1)) ~ about1,
))
d <- d %>%
mutate(about2 = case_when(
(is.na(about2)) ~ 0.5,
(!is.na(about2)) ~ about2,
))
#delete fillers
d_final <- d[(d$condition!="filler"),]
data_final <- d_final%>% select(one_of('participant','item','list','condition',
'about1','about2','continue_rate.response'))
colnames(data_final) <- c("participant", "item", "list", "condition", "exp1", "exp2", "continue")
table(data_final$list)
#Save preprocessed data without fillers and controls
#data of two participants is excluded (this will be input for analysis)
write.table(data_final, file="../data/preprocessed_data/data.csv",
row.names = FALSE, col.names = TRUE, sep = ";")
# set working directory to directory of script
this.dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(this.dir)
library(readr)
library(lme4)
library(tidyverse)
library(ggrepel)
library(lsmeans)
library(lmerTest)
theme_set(theme_bw())
########################################################
source("C:/Arbeit/R statistics/helpers.r")
#### load data ###########
data <- read.csv("../data/preprocessed_data/data.csv", sep = ";")
nrow(data) #150 = 30 participants x 5 target items
length(unique(data$participant))
summary(data)
table(data$list)
#### Interpret exp (expectedness rating) as factor and continue (continuetainty rating) as numbers
data$exp1<-as.numeric(data$exp1)
data$exp2<-as.numeric(data$exp2)
data$continue<-as.numeric(data$continue)
data$at_issue <- data$condition
data <- data %>%
mutate(at_issue = case_when(
(at_issue == "look_ai" | at_issue == "food_ai") ~ "at-issue",
(at_issue == "look_nai" | at_issue == "food_nai") ~ "not at-issue",
))
data$item_type <- data$condition
data <- data %>%
mutate(item_type = case_when(
(condition == "look_ai" | condition == "look_nai") ~ "look",
(condition == "food_ai" | condition == "food_nai") ~ "food",
))
data$exp_match <- data$condition
data <- data %>%
mutate(exp_match = case_when(
(condition == "look_ai" | condition == "look_nai") ~ exp1,
(condition == "food_ai" | condition == "food_nai") ~ exp2,
))
data$exp_mismatch <- data$condition
data <- data %>%
mutate(exp_mismatch = case_when(
(condition == "look_ai" | condition == "look_nai") ~ exp2,
(condition == "food_ai" | condition == "food_nai") ~ exp1,
))
mean(data$exp_match)
mean(data$exp_mismatch)
sd(data$exp_match)
sd(data$exp_mismatch)
q_type <- c("match", "mismatch")
exp <- c(mean(data$exp_match), mean(data$exp_mismatch))
sd <- c(sd(data$exp_match), sd(data$exp_mismatch))
df <- data.frame(q_type, exp, sd)
ggplot(df, aes(x=q_type, y=exp)) +
geom_point(shape=20, size=5, alpha=1,colour="blue") +
geom_errorbar(aes(x=q_type, ymin=exp-sd, ymax=exp+sd), width=0.25) +
xlab("Context-question match") +
ylab("Expectedness rating") +
scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(-0.01,1.1)) +
theme(panel.spacing.x = unit(4, "mm")) #+
#facet_wrap(. ~ at_issue)
ggsave("../graphs/exp_by_q_type.png",height=4,width=5)
#correlation between expectedness of matching question (exp_match) and continue
ggplot(data, aes(x=exp_match, y=continue)) +
geom_point(shape=20, size=5, alpha=.3,colour="blue") +
#geom_errorbar(aes(x=item_no, ymin=Mean.exp1-sd.exp1, ymax=Mean.exp1+sd.exp1), width=0.25) +
xlab("Expectedness for matching question") +
ylab("Continuation rating") +
#scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
theme(panel.spacing.x = unit(4, "mm")) +
facet_wrap(. ~ at_issue)
#correlation between expectedness of mismatching question (exp_mismatch) and continue
ggplot(data, aes(x=exp_mismatch, y=continue)) +
geom_point(shape=20, size=5, alpha=.3,colour="blue") +
#geom_errorbar(aes(x=item_no, ymin=Mean.exp1-sd.exp1, ymax=Mean.exp1+sd.exp1), width=0.25) +
xlab("Expectedness for matching question") +
ylab("Continuation rating") +
#scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
theme(panel.spacing.x = unit(4, "mm")) +
facet_wrap(. ~ at_issue)
issue1.item = data %>%
group_by(at_issue) %>%
summarize(Mean.cont = mean(continue), sd.cont = sd(continue)) %>%
ungroup()
#Plot continuation rating depending on exp1 (Where is Peter?)
ggplot(issue1.item, aes(x=at_issue, y=Mean.cont)) +
geom_point(shape=20, size=5, alpha=1,colour="blue") +
geom_errorbar(aes(x=at_issue, ymin=Mean.cont-sd.cont, ymax=Mean.cont+sd.cont), width=0.25) +
xlab("At-issueness") +
ylab("Continuation rating") +
#scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
theme(panel.spacing.x = unit(4, "mm")) #+
#facet_wrap(. ~ condition)
ggsave("../graphs/continue_by_at_issue.png",height=4,width=4)
type1.item = data %>%
group_by(item_type) %>%
summarize(Mean.exp1 = mean(exp1), sd.exp1 = sd(exp1)) %>%
ungroup()
#Plot exp1 (Where is Peter?) depending on item type
ggplot(type1.item, aes(x=item_type, y=Mean.exp1)) +
geom_point(shape=20, size=5, alpha=.3,colour="blue") +
geom_errorbar(aes(x=item_type, ymin=Mean.exp1-sd.exp1, ymax=Mean.exp1+sd.exp1), width=0.25) +
xlab("Item type") +
ylab("Expectedness rating of Where is Peter?") +
#scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
theme(panel.spacing.x = unit(4, "mm")) #+
#facet_wrap(. ~ condition)
ggsave("../graphs/q_loc_by_item_type.png",height=4,width=4)
type2.item = data %>%
group_by(item_type) %>%
summarize(Mean.exp2 = mean(exp2), sd.exp2 = sd(exp2)) %>%
ungroup()
#Plot exp2 (What does Peter like?) depending on item type
ggplot(type2.item, aes(x=item_type, y=Mean.exp2)) +
geom_point(shape=20, size=5, alpha=.3,colour="blue") +
geom_errorbar(aes(x=item_type, ymin=Mean.exp2-sd.exp2, ymax=Mean.exp2+sd.exp2), width=0.25) +
xlab("Item type") +
ylab("Expectedness rating of What does Peter like?") +
#scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
theme(panel.spacing.x = unit(4, "mm")) #+
#facet_wrap(. ~ condition)
ggsave("../graphs/q_like_by_item_type.png",height=4,width=4)
#Plot continuation rating depending on exp1 (Where is Peter?)
ggplot(data, aes(x=exp1, y=continue)) +
geom_jitter(shape=20, size=5, alpha=.3,colour="blue") +
#geom_errorbar(aes(x=item_no, ymin=Mean.exp1-sd.exp1, ymax=Mean.exp1+sd.exp1), width=0.25) +
xlab("Expectedness rating for Where is Peter?") +
ylab("Continuation rating") +
#scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
theme(panel.spacing.x = unit(4, "mm")) +
facet_wrap(. ~ condition)
ggsave("../graphs/correl_exp_loc&continue.png",height=5,width=4)
#Plot continuation rating depending on exp2 (What does Peter like?)
ggplot(data, aes(x=exp2, y=continue)) +
geom_jitter(shape=20, size=5, alpha=.3,colour="blue") +
#geom_errorbar(aes(x=item_no, ymin=Mean.exp1-sd.exp1, ymax=Mean.exp1+sd.exp1), width=0.25) +
xlab("Expectedness rating for What does Peter like?") +
ylab("Continuation rating") +
#scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
theme(panel.spacing.x = unit(4, "mm")) +
facet_wrap(. ~ condition)
ggsave("../graphs/correl_exp_like&continue.png",height=5,width=4)
## plot mean continuetainty and mean aboutness1 ratings separately for the items
#aboutness1 mean per item
exp1.item = data %>%
group_by(item,condition) %>%
summarize(Mean.exp1 = mean(exp1), sd.exp1 = sd(exp1)) %>%
ungroup() %>%
mutate(item = fct_reorder(as.factor(item),Mean.exp1))
summary(exp1.item)
ggplot(exp1.item, aes(x=condition, y=Mean.exp1)) +
geom_point(shape=20, size=4, alpha=1,colour="blue") +
geom_errorbar(aes(x=condition, ymin=Mean.exp1-sd.exp1, ymax=Mean.exp1+sd.exp1), width=0.25) +
xlab("Condition") +
ylab("Mean expectedness rating Where is Peter?") +
#scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
theme(panel.spacing.x = unit(4, "mm")) #+
#facet_wrap(. ~ condition)
ggsave("../graphs/mean_exp_loc.png",height=3,width=4)
#aboutness2 mean per item
exp2.item = data %>%
group_by(item,condition) %>%
summarize(Mean.exp2 = mean(exp2), sd.exp2 = sd(exp2)) %>%
ungroup() %>%
mutate(item_no = fct_reorder(as.factor(item),Mean.exp2))
summary(exp2.item)
ggplot(exp2.item, aes(x=condition, y=Mean.exp2)) +
geom_point(shape=20, size=4, alpha=1,colour="blue") +
geom_errorbar(aes(x=condition, ymin=Mean.exp2-sd.exp2, ymax=Mean.exp2+sd.exp2), width=0.25) +
xlab("Condition") +
ylab("Mean expectedness rating What does Peter like?") +
#scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
theme(panel.spacing.x = unit(4, "mm"))
ggsave("../graphs/mean_exp_like.png",height=3,width=4)
#continue mean per item
continue.item = data %>%
group_by(item,condition) %>%
summarize(Mean.continue = mean(continue), sd.continue = sd(continue)) %>%
ungroup() %>%
mutate(item_no = fct_reorder(as.factor(item),Mean.continue))
ggplot(continue.item, aes(x=condition, y=Mean.continue)) +
geom_point(shape=20, size=4, alpha=1,colour="blue") +
geom_errorbar(aes(x=condition, ymin=Mean.continue-sd.continue, ymax=Mean.continue+sd.continue), width=0.25) +
xlab("Condition") +
ylab("Mean continuation rating") +
#scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
theme(panel.spacing.x = unit(4, "mm")) #+
#facet_wrap(. ~ condition)
ggsave("../graphs/mean_continuation_rating.png",height=3,width=4)
# set working directory to directory of script
this.dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(this.dir)
library(readr)
library(lme4)
library(tidyverse)
library(ggrepel)
library(lsmeans)
library(lmerTest)
theme_set(theme_bw())
########################################################
source("C:/Arbeit/R statistics/helpers.r")
#### load data ###########
data <- read.csv("../data/preprocessed_data/data.csv", sep = ";")
nrow(data) #150 = 30 participants x 5 target items
length(unique(data$participant))
summary(data)
table(data$list)
# set working directory to directory of script
this.dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(this.dir)
library(readr)
library(lme4)
library(tidyverse)
library(ggrepel)
library(lsmeans)
library(lmerTest)
theme_set(theme_bw())
########################################################
source("C:/Arbeit/R statistics/helpers.r")
#### load data ###########
data <- read.csv("../data/preprocessed_data/data.csv", sep = ";")
nrow(data) #40 10 per list
length(unique(data$participant))
summary(data)
table(data$list)
#### Interpret exp (expectedness rating) as factor and continue (continuetainty rating) as numbers
data$exp1<-as.numeric(data$exp1)
data$exp2<-as.numeric(data$exp2)
data$continue<-as.numeric(data$continue)
data$at_issue <- data$condition
data <- data %>%
mutate(at_issue = case_when(
(at_issue == "look_ai" | at_issue == "food_ai") ~ "at-issue",
(at_issue == "look_nai" | at_issue == "food_nai") ~ "not at-issue",
))
data$item_type <- data$condition
data <- data %>%
mutate(item_type = case_when(
(condition == "look_ai" | condition == "look_nai") ~ "look",
(condition == "food_ai" | condition == "food_nai") ~ "food",
))
data$exp_match <- data$condition
data <- data %>%
mutate(exp_match = case_when(
(condition == "look_ai" | condition == "look_nai") ~ exp1,
(condition == "food_ai" | condition == "food_nai") ~ exp2,
))
data$exp_mismatch <- data$condition
data <- data %>%
mutate(exp_mismatch = case_when(
(condition == "look_ai" | condition == "look_nai") ~ exp2,
(condition == "food_ai" | condition == "food_nai") ~ exp1,
))
mean(data$exp_match)
mean(data$exp_mismatch)
sd(data$exp_match)
sd(data$exp_mismatch)
q_type <- c("match", "mismatch")
exp <- c(mean(data$exp_match), mean(data$exp_mismatch))
sd <- c(sd(data$exp_match), sd(data$exp_mismatch))
df <- data.frame(q_type, exp, sd)
ggplot(df, aes(x=q_type, y=exp)) +
geom_point(shape=20, size=5, alpha=1,colour="blue") +
geom_errorbar(aes(x=q_type, ymin=exp-sd, ymax=exp+sd), width=0.25) +
xlab("Context-question match") +
ylab("Expectedness rating") +
scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(-0.01,1.1)) +
theme(panel.spacing.x = unit(4, "mm")) #+
#facet_wrap(. ~ at_issue)
ggsave("../graphs/exp_by_q_type.png",height=4,width=5)
#correlation between expectedness of matching question (exp_match) and continue
ggplot(data, aes(x=exp_match, y=continue)) +
geom_point(shape=20, size=5, alpha=.3,colour="blue") +
#geom_errorbar(aes(x=item_no, ymin=Mean.exp1-sd.exp1, ymax=Mean.exp1+sd.exp1), width=0.25) +
xlab("Expectedness for matching question") +
ylab("Continuation rating") +
#scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
theme(panel.spacing.x = unit(4, "mm")) +
facet_wrap(. ~ at_issue)
#correlation between expectedness of mismatching question (exp_mismatch) and continue
ggplot(data, aes(x=exp_mismatch, y=continue)) +
geom_point(shape=20, size=5, alpha=.3,colour="blue") +
#geom_errorbar(aes(x=item_no, ymin=Mean.exp1-sd.exp1, ymax=Mean.exp1+sd.exp1), width=0.25) +
xlab("Expectedness for matching question") +
ylab("Continuation rating") +
#scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
theme(panel.spacing.x = unit(4, "mm")) +
facet_wrap(. ~ at_issue)
## plot mean continuation and mean aboutness1 ratings separately for the items
#aboutness1 mean per item
exp1.item = data %>%
group_by(item,condition) %>%
summarize(Mean.exp1 = mean(exp1), sd.exp1 = sd(exp1)) %>%
ungroup() %>%
mutate(item = fct_reorder(as.factor(item),Mean.exp1))
continue.item = data %>%
group_by(item,condition) %>%
summarize(Mean.continue = mean(continue), sd.continue = sd(continue)) %>%
ungroup() %>%
mutate(item_no = fct_reorder(as.factor(item),Mean.continue))
ggplot(continue.item, aes(x=condition, y=Mean.continue)) +
geom_point(shape=20, size=4, alpha=1,colour="blue") +
geom_errorbar(aes(x=condition, ymin=Mean.continue-sd.continue, ymax=Mean.continue+sd.continue), width=0.25) +
xlab("Condition") +
ylab("Mean continuation rating") +
#scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
theme(panel.spacing.x = unit(4, "mm")) #+
issue1.item = data %>%
group_by(at_issue) %>%
summarize(Mean.cont = mean(continue), sd.cont = sd(continue)) %>%
ungroup()
#Plot continuation rating depending on at-issueness (mis)match
ggplot(issue1.item, aes(x=at_issue, y=Mean.cont)) +
geom_point(shape=20, size=5, alpha=1,colour="blue") +
geom_errorbar(aes(x=at_issue, ymin=Mean.cont-sd.cont, ymax=Mean.cont+sd.cont), width=0.25) +
xlab("At-issueness") +
ylab("Continuation rating") +
#scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
theme(panel.spacing.x = unit(4, "mm")) #+
#facet_wrap(. ~ condition)
ggsave("../graphs/continue_by_at_issue.png",height=4,width=4)
#correlation between expectedness of matching question (exp_match) and continue
ggplot(data, aes(x=exp_match, y=continue)) +
geom_point(shape=20, size=5, alpha=.3,colour="blue") +
#geom_errorbar(aes(x=item_no, ymin=Mean.exp1-sd.exp1, ymax=Mean.exp1+sd.exp1), width=0.25) +
xlab("Expectedness for matching question") +
ylab("Continuation rating") +
#scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
theme(panel.spacing.x = unit(4, "mm")) +
facet_wrap(. ~ at_issue)
#correlation between expectedness and continue
ggplot(data, aes(x=exp, y=continue)) +
geom_point(shape=20, size=5, alpha=.3,colour="blue") +
#geom_errorbar(aes(x=item_no, ymin=Mean.exp1-sd.exp1, ymax=Mean.exp1+sd.exp1), width=0.25) +
xlab("Expectedness for matching question") +
ylab("Continuation rating") +
#scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
theme(panel.spacing.x = unit(4, "mm"))# +
